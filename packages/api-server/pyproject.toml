[tool.poetry]
name = "caption-editor-api"
version = "0.2.0"
description = "Caption Editor API Server - FastAPI backend for video caption processing"
authors = ["YWC Tech"]
packages = [{include = "caption_editor_api", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
python-multipart = "^0.0.6"
httpx = "^0.25.0"
assemblyai = "^0.42.1"
pyyaml = "^6.0.1"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
black = "^23.0.0"
ruff = "^0.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Ruff configuration for ultra-fast Python linting and formatting
[tool.ruff]
# Set the maximum line length to 120
line-length = 120
# Target Python 3.11+
target-version = "py311"

# Enable specific rule categories
[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # Line too long (handled by formatter)
]

# Exclude specific directories
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"
# Use spaces around equals signs
indent-style = "space"
